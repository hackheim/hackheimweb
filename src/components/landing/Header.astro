---
import { Cpu } from "@lucide/astro";

export interface Props {
    title: string;
    navigationItems: Array<{
        href: string;
        label: string;
    }>;
    ctaButton: {
        label: string;
        href?: string;
    };
    currentPath?: string;
}

const { title, navigationItems, ctaButton, currentPath } = Astro.props;
---

<header
    class="border-b border-border bg-card/50 backdrop-blur-sm sticky top-0 z-50"
>
    <div class="container mx-auto px-4 py-4 flex items-center justify-between">
        <div class="flex items-center space-x-2">
            <div
                class="w-8 h-8 bg-primary rounded-lg flex items-center justify-center"
            >
                <Cpu class="w-5 h-5 text-primary-foreground" />
            </div>
            <h1
                class="text-2xl font-bold text-primary my-0"
                style="font-family: 'Space Grotesk', sans-serif;"
            >
                {title}
            </h1>
        </div>
        <nav class="hidden md:flex space-x-6">
            {
                navigationItems.map((item) => (
                    <a
                        href={item.href}
                        class={`transition-colors ${
                            currentPath && currentPath === item.href
                                ? "text-primary font-medium"
                                : "text-foreground hover:text-primary"
                        }`}
                    >
                        {item.label}
                    </a>
                ))
            }
        </nav>
        {
            ctaButton.href ? (
                <a
                    href={ctaButton.href}
                    class="bg-accent hover:bg-accent/90 text-accent-foreground px-4 py-2 rounded-md transition-colors no-underline"
                >
                    {ctaButton.label}
                </a>
            ) : (
                <button class="bg-accent hover:bg-accent/90 text-accent-foreground px-4 py-2 rounded-md transition-colors">
                    {ctaButton.label}
                </button>
            )
        }
    </div>
</header>
